  /// \file Streamable.h
/*
 *
 * Streamable.h header template automatically generated by a class generator
 * Creation date : ven. fï¿½vr. 26 2016
 *
 * This file is part of xdrstream libraries.
 * 
 * xdrstream is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * xdrstream is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with xdrstream.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef STREAMABLE_H
#define STREAMABLE_H

#include "xdrstream/XdrDefinitions.h"
#include "xdrstream/IODevice.h"

namespace xdrstream
{

/** 
 * @brief Streamable class
 */ 
class Streamable 
{
public:
	/**
	 *  @brief  Destructor
	 */
	virtual ~Streamable() { /* nop */ }

	/**
	 *  @brief  Stream your object in read or write mode into the target device
	 *
	 *  @param  mode the streaming mode (read/write)
	 *  @param  pDevice the device to stream the object in/out
	 *  @param  version an optional version flag to stream the object
	 */
	virtual Status stream(StreamingMode mode, IODevice *pDevice, xdr_version_t version = 0) = 0;
};

}

#endif  //  STREAMABLE_H
